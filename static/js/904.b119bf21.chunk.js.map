{"version":3,"file":"static/js/904.b119bf21.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/TweetList/TweetList.styled.js","redux/selectors.js","components/Tweet/Tweet.styled.js","components/Tweet/Tweet.jsx","components/LoadButton/LoadButton.styled.js","components/LoadButton/LoadButton.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/TweetList/TweetList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleSection = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\nexport const Title = styled.h1`\n  margin-top: 50px;\n  font-family: sans-serif;\n  font-size: 48px;\n  background: linear-gradient(\n    45deg,\n    violet,\n    indigo,\n    blue,\n    darkblue,\n    blue,\n    indigo,\n    violet\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport { StyleSection, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <StyleSection>\n      <Title>{title}</Title>\n      {children}\n    </StyleSection>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.div`\n  margin: 0px auto;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Center = styled.div`\n  margin: 0px auto;\n\n  ${\n    '' /* display: flex;\n  justify-content: center;\n  flex-wrap: wrap; */\n  }\n`;\nexport const Tweets = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  @media screen and (min-width: 980px) {\n    padding: 0 50px;\n    flex-direction: row;\n    flex-wrap: wrap;\n    flex: 0 0 calc(50% - 10px);\n    justify-content: space-between;\n    width: 800px;\n  }\n  @media screen and (min-width: 1400px) {\n    padding: 0;\n    flex: 0 0 calc(33.33% - 10px);\n    gap: 130px;\n    justify-content: center;\n    width: 100%;\n  }\n`;\nexport const Load = styled.div`\n  margin: 50px auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Li = styled.li`\n  margin: 10;\n`;\nexport const Delete = styled.button`\n  background-color: #ffcec8;\n  border: 1px solid grey;\n  border-radius: 3px;\n  margin-left: 7px;\n  padding: 3px;\n  font-size: 12px;\n  height: min-content;\n  &:hover,\n  &:active,\n  &:focus {\n    background-color: teal;\n  }\n`;\nexport const End = styled.h1`\n  margin: 50px auto;\n  text-align: center;\n`;\n","export const selectTweets = state => state.tweets.items;\n\nexport const selectIsActiveTweets = state => state.tweets.items.isActive;\n\nexport const selectStatusFilter = state => state.filter.status;\n\nexport const selectIsLoading = state => state.tweets.isLoading;\n\nexport const selectError = state => state.tweets.error;\n","import styled from 'styled-components';\nexport const Item = styled.div`\n  margin: 20;\n`;\n\nexport const Box = styled.div`\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  position: relative;\n`;\nexport const Logo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  width: 76px;\n  height: 22px;\n  background: url(../../img/Logo.png);\n`;\nexport const Picture = styled.img`\n  position: absolute;\n  width: 308px;\n  height: 168px;\n  left: 36px;\n  top: 28px;\n  background: url(../../img/picture2.png);\n`;\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  top: 180px;\n  left: 150px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n  z-index: 1;\n`;\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 9.5px;\n  left: 9.5px;\n  width: 62px;\n  height: 62px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n  z-index: 1;\n`;\nexport const Line = styled.div`\n  position: absolute;\n  width: 380px;\n  height: 8px;\n  left: 0px;\n  top: 214px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n  z-index: 0;\n`;\n\nexport const Text = styled.div`\n  margin-top: 64px;\n  p {\n    font-family: 'Montserrat, sans-serif';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 1.2;\n    text-transform: uppercase;\n    text-align: center;\n\n    color: #ebd8ff;\n  }\n`;\nexport const Button = styled.button`\n  position: absolute;\n  left: ${props => (props.condition ? '130px' : '110px')};\n  top: 374px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n  font-family: 'Montserrat, sans-serif';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  border-style: none;\n\n  background: ${props => (props.condition ? '#EBD8FF' : '#5CD3A8')};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setTweetActiveState } from 'redux/tweetSlice';\nimport {\n  Item,\n  Box,\n  Logo,\n  Picture,\n  Avatar,\n  AvatarWrapper,\n  Text,\n  Button,\n  Line,\n} from './Tweet.styled';\nimport numeral from 'numeral';\nimport logoImg from '../../img/Logo.png';\nimport bgImg from '../../img/picture2.png';\n\nexport default function Tweet({ fields }) {\n  const dispatch = useDispatch();\n\n  const isAct = fields.isActive;\n  const [isActive, setIsActive] = useState(isAct);\n\n  const toggleButton = () => {\n    const tweetId = fields.id;\n    const isActive = !fields.isActive;\n    setIsActive(isActive);\n    dispatch(setTweetActiveState({ tweetId, isActive }));\n  };\n\n  const followers = isActive ? fields.followers + 1 : fields.followers;\n  const formattedNumber = numeral(followers).format('0,0');\n  const buttonText = !isActive ? 'FOLLOW' : 'FOLLOWING';\n\n  return (\n    <Item>\n      <Box>\n        <Logo src={logoImg} />\n        <Picture src={bgImg} />\n        <AvatarWrapper>\n          <Avatar src={fields.avatar} />\n        </AvatarWrapper>\n\n        <Line>\n          <Text>\n            <p>{fields.tweets} TWEETS</p>\n            <p>{formattedNumber} FOLLOWERS</p>\n          </Text>\n        </Line>\n\n        <Button onClick={toggleButton} condition={!isActive}>\n          {buttonText}\n        </Button>\n      </Box>\n    </Item>\n  );\n}\n\nTweet.propTypes = {\n  fields: PropTypes.shape({\n    user: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ButtonStyle = styled.button`\n  margin: 0 auto;\n  background-color: rgb(159 137 209);\n  color: #fff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n\n  padding: 14px 28px;\n  gap: 6px;\n  font-family: 'Montserrat, sans-serif';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  border-style: none;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  :hover,\n  :focus {\n    background-color: #ebd8ff;\n    color: #000;\n  }\n`;\n","import { ButtonStyle } from './LoadButton.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <ButtonStyle type=\"button\" onClick={onClick}>\n      Load more\n    </ButtonStyle>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const LoaderStyle = styled.div`\n  margin: 0 auto;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderStyle } from './Loader.styled';\n\nconst LoaderRing = () => {\n  return (\n    <LoaderStyle>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderStyle>\n  );\n};\nexport default LoaderRing;\n","import { Li, List, Tweets, Load, End, Center } from './TweetList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectTweets,\n  selectStatusFilter,\n} from 'redux/selectors';\nimport Tweet from 'components/Tweet/Tweet';\nimport Button from 'components/LoadButton/LoadButton';\nimport { fetchTweetsPart } from 'redux/operations';\nimport { totalCountTweets } from 'redux/operations';\nimport LoaderRing from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { persistor } from 'redux/store';\nimport { statusFilters } from '../../redux/constants';\n\nconst getVisibleTweets = (tweets, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tweets.filter(tweet => tweet.isActive);\n    case statusFilters.unActive:\n      return tweets.filter(tweet => !tweet.isActive);\n    default:\n      return tweets;\n  }\n};\n\nconst Items = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const tweets = useSelector(selectTweets);\n  const isGeneralLoading = useSelector(selectIsLoading);\n  const [load, setLoad] = useState(false);\n  const [page, setPage] = useState(2);\n\n  const uniqueItems = tweets.filter((item, index, self) => {\n    return self.findIndex(i => i.id === item.id) === index;\n  });\n  const statusFilter = useSelector(selectStatusFilter);\n  const visibleTweets = getVisibleTweets(uniqueItems, statusFilter);\n\n  useEffect(() => {\n    persistor.purge();\n    if (!tweets.length) {\n      dispatch(fetchTweetsPart(1));\n    }\n  }, [dispatch, tweets]);\n\n  useEffect(() => {\n    if (load) {\n      dispatch(fetchTweetsPart(page));\n      setLoad(false);\n      setPage(page + 1);\n    }\n  }, [dispatch, load, page]);\n\n  const handleLoading = () => {\n    setLoad(true);\n  };\n\n  async function fetchData() {\n    try {\n      const totalCount = await totalCountTweets;\n      if (\n        totalCount === uniqueItems.length ||\n        totalCount === uniqueItems.length - 1 ||\n        totalCount === uniqueItems.length - 2\n      ) {\n        return true;\n      }\n    } catch (error) {\n      console.error('Error fetching total tweets count:', error);\n    }\n  }\n  const reachTheEnd = fetchData();\n  return (\n    <List>\n      <Center>\n        <Tweets>\n          {visibleTweets.length\n            ? visibleTweets.map(obj => (\n                <Li key={obj.id}>\n                  <Tweet fields={obj} />\n                </Li>\n              ))\n            : !isGeneralLoading && <h3>There are no tweets in mockapi</h3>}\n        </Tweets>\n      </Center>\n\n      {reachTheEnd ? (\n        <End>It's all twits!</End>\n      ) : (\n        <Load>\n          {tweets.length && !load && !error && !isGeneralLoading ? (\n            <Button onClick={handleLoading} />\n          ) : (\n            <LoaderRing />\n          )}{' '}\n        </Load>\n      )}\n      {error && <p>Something went wrong...</p>}\n    </List>\n  );\n};\n\nexport default Items;\n","import styled from 'styled-components';\n\nexport const Dropdown = styled.button`\n  margin: 0 auto;\n  background-color: ${props =>\n    props.condition ? '#EBD8FF' : 'rgb(159 137 209)'};\n  color: ${props => (props.condition ? '#000' : '#fff')};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n\n  padding: 14px 28px;\n  gap: 6px;\n  font-family: 'Montserrat, sans-serif';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  border-style: none;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  :hover,\n  :focus {\n    background-color: #ebd8ff;\n    color: #000;\n  }\n`;\n\nexport const List = styled.div`\n  background-color: rgb(159 137 209);\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 60px;\n  right: 0px;\n  padding: 0 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n`;\nexport const Button = styled.button`\n  color: ${props => (props.condition ? '#fff' : '#000')};\n  background-color: rgb(159 137 209);\n  border-style: none;\n  text-transform: uppercase;\n  padding: 10px;\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { statusFilters } from 'redux/constants';\nimport { selectStatusFilter } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { useState } from 'react';\nimport { Dropdown, List, Button } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const [close, setClose] = useState(true);\n  const [select, setSelect] = useState(false);\n  const filter = useSelector(selectStatusFilter);\n\n  const handleDropdown = () => {\n    setClose(!close);\n  };\n  const handleFilterChange = filter => {\n    dispatch(setStatusFilter(filter));\n    setSelect(true);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {close ? (\n        <Dropdown condition={!close} onClick={handleDropdown}>\n          FILTERS\n        </Dropdown>\n      ) : (\n        <>\n          <Dropdown condition={!close} onClick={handleDropdown}>\n            FILTERS\n          </Dropdown>\n          <List>\n            <Button\n              condition={select}\n              selected={filter === statusFilters.all}\n              onClick={() => handleFilterChange(statusFilters.all)}\n            >\n              SHOW ALL\n            </Button>\n            <Button\n              condition={select}\n              selected={filter === statusFilters.active}\n              onClick={() => handleFilterChange(statusFilters.active)}\n            >\n              FOLLOWINGS\n            </Button>\n            <Button\n              condition={select}\n              selected={filter === statusFilters.completed}\n              onClick={() => handleFilterChange(statusFilters.unActive)}\n            >\n              FOLLOW\n            </Button>\n          </List>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const SpaceBetween = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media screen and (min-width: 980px) {\n    padding: 20px 100px 0;\n  }\n  @media screen and (min-width: 1400px) {\n    padding: 30px 200px 0;\n  }\n`;\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1600px;\n`;\n","import Section from '../../components/Section';\nimport Items from '../../components/TweetList';\nimport Filter from '../../components/Filter';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ButtonStyle } from 'components/LoadButton/LoadButton.styled';\nimport { selectError } from 'redux/selectors';\nimport { SpaceBetween, Container } from './Tweets.styled';\n\nconst Tweets = () => {\n  const error = useSelector(selectError);\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/');\n  };\n\n  return (\n    <Container>\n      <SpaceBetween>\n        <ButtonStyle style={{ margin: 0 }} onClick={handleClick}>\n          BACK\n        </ButtonStyle>\n        <Filter />\n      </SpaceBetween>\n\n      <Section title=\"MAIN TASK\">\n        {error && (\n          <b style={{ marginLeft: 70 }}>\n            The operation failed with error: ${error}\n          </b>\n        )}\n        {!error && <Items />}\n      </Section>\n    </Container>\n  );\n};\nexport default Tweets;\n"],"names":["StyleSection","styled","Title","title","children","List","Center","Tweets","Load","Li","End","selectTweets","state","tweets","items","selectStatusFilter","filter","status","selectIsLoading","isLoading","selectError","error","Item","Box","Logo","Picture","AvatarWrapper","Avatar","Line","Text","Button","props","condition","Tweet","fields","dispatch","useDispatch","isAct","isActive","useState","setIsActive","followers","formattedNumber","numeral","format","buttonText","src","bgImg","avatar","onClick","tweetId","id","setTweetActiveState","ButtonStyle","type","LoaderStyle","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useSelector","isGeneralLoading","load","setLoad","page","setPage","uniqueItems","item","index","self","findIndex","i","statusFilter","visibleTweets","statusFilters","tweet","getVisibleTweets","useEffect","persistor","length","fetchTweetsPart","totalCountTweets","totalCount","console","reachTheEnd","fetchData","map","obj","Loader","Dropdown","close","setClose","select","setSelect","handleDropdown","handleFilterChange","setStatusFilter","style","position","selected","SpaceBetween","Container","navigate","useNavigate","margin","marginLeft"],"sourceRoot":""}